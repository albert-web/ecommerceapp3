[{"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\index.js":"1","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\aws-exports.js":"2","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Router.js":"3","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Admin.js":"4","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Main.js":"5","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\checkUser.js":"6","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Container.js":"7","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Nav.js":"8","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Profile.js":"9"},{"size":299,"mtime":1606623950703,"results":"10","hashOfConfig":"11"},{"size":877,"mtime":1606326711338,"results":"12","hashOfConfig":"11"},{"size":1417,"mtime":1606696582277,"results":"13","hashOfConfig":"11"},{"size":1998,"mtime":1606706851518,"results":"14","hashOfConfig":"11"},{"size":2984,"mtime":1606707516519,"results":"15","hashOfConfig":"11"},{"size":1021,"mtime":1606762846570,"results":"16","hashOfConfig":"11"},{"size":297,"mtime":1606697003076,"results":"17","hashOfConfig":"11"},{"size":1758,"mtime":1606762441412,"results":"18","hashOfConfig":"11"},{"size":437,"mtime":1606697075493,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vky5un",{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\index.js",[],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\aws-exports.js",[],["41","42"],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Router.js",[],["43","44"],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Admin.js",[],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Main.js",["45"],"import React\r\n  , { \r\n    useState\r\n    , useEffect \r\n  } from 'react';\r\n\r\nimport Container from './Container';\r\n\r\nimport { API } from 'aws-amplify';\r\n\r\nimport { List } from 'antd';\r\n\r\nimport checkUser from './checkUser';\r\n\r\nconst Main = () => {\r\n    const [state, setState] = useState(\r\n        {\r\n          products: []\r\n          , loading: true\r\n        }\r\n    );\r\n\r\n    const [user, updateUser] = useState({});\r\n\r\n    let didCancel = false;\r\n\r\n    useEffect(\r\n        () => {\r\n            getProducts();\r\n            checkUser(updateUser);\r\n            \r\n            // Return lambda that runs as cleanup code wneh this react component goes away...\r\n            return () => didCancel = true\r\n        }\r\n        , []\r\n    );\r\n    const getProducts = async () => {\r\n\r\n        const data = await API.get(\r\n            'ecommerceapi'\r\n            , '/products'\r\n          );\r\n\r\n        console.log('data: ', data);\r\n\r\n        //Sentinel... return, stop this function if they cancelled.\r\n        if (didCancel) {\r\n          return\r\n        } \r\n        setState(\r\n            {\r\n                products: data.data.Items\r\n                , loading: false\r\n            }\r\n        );\r\n    };\r\n\r\n    const deleteItem = async (id) => {\r\n        try {\r\n            \r\n            // Yea ... Author using filter\r\n            const products = state.products.filter(p => p.id !== id);\r\n\r\n            //Updating local component state, removing the item, before it is deleted... Optimistic again...\r\n            setState(\r\n                { \r\n                    ...state\r\n                    , products // Shorthand for products: products\r\n                }\r\n            );\r\n\r\n            await API.del(\r\n                'ecommerceapi'\r\n                , '/products'\r\n                , { \r\n                  body: { \r\n                      id // Shorthang for id: id\r\n                  } \r\n                }\r\n            );\r\n\r\n            console.log('successfully deleted item');\r\n              \r\n          } catch (err) {\r\n            console.log('error: ', err)\r\n          }\r\n      }\r\n    return (\r\n      <Container>\r\n        <List\r\n          itemLayout=\"horizontal\"\r\n          dataSource={state.products}\r\n          loading={state.loading}\r\n          renderItem={\r\n              item => (\r\n              <List.Item\r\n                  actions={\r\n                      user.isAuthorized ? \r\n                      [\r\n                        <p \r\n                          onClick={() => deleteItem(item.id)} \r\n                          key={item.id}\r\n                        >\r\n                          delete\r\n                        </p>\r\n                      ] : \r\n                      null\r\n                  }\r\n              >\r\n                  <List.Item.Meta\r\n                      title={item.name}\r\n                      description={item.price}\r\n                  />\r\n                  </List.Item>\r\n          )}\r\n        />\r\n      </Container>\r\n    );\r\n}\r\n\r\nexport default Main;","C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\checkUser.js",[],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Container.js",[],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Nav.js",[],"C:\\Users\\mensa\\Documents\\githubs\\ecommerceapp\\src\\Profile.js",[],{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"46","replacedBy":"50"},{"ruleId":"48","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":33,"column":38,"nodeType":"54","endLine":33,"endColumn":42},"no-native-reassign",["55"],"no-negated-in-lhs",["56"],["55"],["56"],"react-hooks/exhaustive-deps","Assignments to the 'didCancel' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal","no-global-assign","no-unsafe-negation"]